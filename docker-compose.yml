version: '3'
services:

  ### nginx Container ############################################
  nginx:
    image: nginx
    volumes:
      - ./www/:/var/www/
      - ./config/nginx/conf.d/:/etc/nginx/conf.d/
    container_name: nginx
    ports:
      - 80:80
    networks:
      - backend

  ### php Container ############################################
  drupal7:
    image: lawxen/drupal:7-fpm
    volumes:
      - ./www/:/var/www/
      - ./config/drupal7/php/php.ini:/usr/local/etc/php/php.ini
    container_name: drupal7
    expose:
      - "9000"
    networks:
      - backend

  ### php Container ############################################
  drupal7dev:
    image: lawxen/drupal:7-fpm-dev
    volumes:
      - ./www/:/var/www/
      - ./config/drupal7/php:/usr/local/etc/php
    container_name: drupal7dev
    expose:
      - "9000"
    networks:
      - backend

  ### php Container ############################################
  drupal8:
    image: lawxen/drupal:8-fpm
    volumes:
      - ./www/:/var/www/
      - ./config/drupal8/php/php.ini:/usr/local/etc/php/php.ini
    container_name: drupal8
    expose:
      - "9000"
    networks:
      - backend

  ### php Container ############################################
  drupal8dev:
    image: lawxen/drupal:8-fpm-dev
    volumes:
      - ./www/:/var/www/
      - ./config/drupal8dev/php:/usr/local/etc/php
    container_name: drupal8dev
    expose:
      - "9000"
    networks:
      - backend

  ### Redis Container #########################################
  redis:
    image: bitnami/redis:4.0-debian-9
    container_name: redis
    environment:
      - REDIS_PASSWORD=c4200bc580
      - ALLOW_EMPTY_PASSWORD=no
    ports:
      - "6379"
    networks:
      - backend

  ### Mariadb Container #######################################
  mariadb:
    image: mariadb:10.4
    volumes:
      - ./mariadb:/var/lib/mysql
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - "3306"
    container_name: mariadb
    restart: always
    networks:
      - backend

### Network ###############################################
networks:
  backend:
    driver: "bridge"
